{"version":3,"sources":["App.js","Perso_token.js","Counter_user.js","Creation.js","Importation.js","serviceWorker.js","index.js","Router.js"],"names":["App","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","network","account","chain_id","last_block","counter_token","name_token","web3","Web3","givenProvider","enable","eth","net","getNetworkType","setState","getAccounts","accounts","getChainId","chainId","getBlockNumber","blockNum","myContract","Contract","erc721_abi","abi","addresse","ERC721","methods","name","nametoken","counter","countertoken","loadBlockchainData","react_default","a","createElement","className","style","textAlign","Component","Token","handleChange","bind","assertThisInitialized","handleSubmit","id_disp","ID","url","address","ownerOf","concat","add","tokenURI","URL","console","log","e","defineProperty","target","value","preventDefault","Form","onSubmit","FormLabel","FormControl","type","placeholder","onChange","Button","variant","src","height","width","alt","count","balanceOf","nombre","id","Creation","values","url_link","mintToken","send","from","utils","toWei","events","Transfer","returnValues","tokenId","receiveEther","test","marginTop","onClick","getBack","owner","balance","owner_final","JSON","parse","owners","ba","required","as","rows","Boolean","window","location","hostname","match","ReactDOM","render","react_router_dom","listStyleType","display","to","marginLeft","react_router","exact","path","src_App","Perso_token","Counter_user","src_Creation","Importation","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.427ec8cd.chunk.js","sourcesContent":["import React, { Component } from 'react'\nimport Web3 from 'web3'\nimport erc721_abi from './ERC721.json'\nimport addresse from './adresse_contract.json'\n\n\n\nclass App extends Component {  \n\n  constructor(props) {\n    super(props)\n    this.state = { \n      network :'',\n      account: '' ,\n      chain_id :0,\n      last_block:0,\n      counter_token:'',\n      name_token:''\n\n    }\n  }\n\n  async loadBlockchainData() {\n    const web3 = new Web3(Web3.givenProvider || \"http://localhost:7545\")\n    Web3.givenProvider.enable()\n    const network = await web3.eth.net.getNetworkType()\n    // web3.eth.sendTransaction({from: '0x9d9fFD857c0B1908C961D2FB7E5a4fc5871FFCE1', to: '0x9d9fFD857c0B1908C961D2FB7E5a4fc5871FFCE1',value : web3.utils.toWei('0.1','ether')})\n    this.setState({ network: network })\n    const accounts = await web3.eth.getAccounts()\n    this.setState({ account: accounts[0] })\n    const chainId = await web3.eth.getChainId()\n    this.setState({ chain_id: chainId })\n    const blockNum = await web3.eth.getBlockNumber()\n    this.setState({ last_block: blockNum })    \n    var myContract = new web3.eth.Contract(erc721_abi.abi, addresse.ERC721);\n    const nametoken = await myContract.methods.name().call()\n    const countertoken = await myContract.methods.counter().call()\n    this.setState({ name_token: nametoken })   \n    this.setState({ counter_token: countertoken })   \n  }\n  \n\n  componentWillMount() {\n    this.loadBlockchainData()\n  }\n\n  render() {\n    return (\n      <div className=\"container\">        \n        <h1 style={{textAlign:\"center\"}}>TD07 !</h1><br></br>\n        <p>Network : {this.state.network}</p>\n        <p>Your account : {this.state.account}</p>\n        <p>Chain Id : {this.state.chain_id}</p>\n        <p>Last block number : {this.state.last_block}</p>\n        <p>Token name : {this.state.name_token}</p>\n        <p>Counter of token : {this.state.counter_token}</p>\n      </div>\n    );\n  }\n}\n\nexport default App;","import React, { Component } from 'react'\r\nimport Web3 from 'web3'\r\nimport erc721_abi from './ERC721.json'\r\nimport addresse from './adresse_contract.json'\r\nimport { Button, Form, FormLabel, FormControl } from 'react-bootstrap';\r\n\r\n\r\n\r\nclass Token extends Component {  \r\n\r\n  constructor(props) {\r\n    super(props)\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n    this.state = { \r\n      id_disp:'',\r\n      ID:'',\r\n      url:'',\r\n      address:''\r\n    }\r\n  }\r\n\r\n  async loadBlockchainData() {\r\n    const web3 = new Web3(Web3.givenProvider || \"http://localhost:7545\")\r\n    Web3.givenProvider.enable()\r\n    var myContract = new web3.eth.Contract(erc721_abi.abi, addresse.ERC721)\r\n    const add = await myContract.methods.ownerOf(`${this.state.ID}`).call()    \r\n    this.setState({ address: add }) \r\n    const URL = await myContract.methods.tokenURI(`${this.state.ID}`).call()\r\n    this.setState({ url: URL }) \r\n    console.log(URL)\r\n    this.setState({ id_disp: this.state.ID, ID: null })\r\n  }\r\n  handleChange(e) {\r\n    this.setState({ [e.target.name]: e.target.value })\r\n  }\r\n\r\n  handleSubmit(e) {    \r\n    e.preventDefault();\r\n    this.loadBlockchainData()    \r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"container\">\r\n        <h1 style={{textAlign:\"center\"}}>Informations about a specific token</h1>\r\n        <br></br>\r\n        <Form onSubmit={this.handleSubmit}>\r\n            <FormLabel >The choosen Id :</FormLabel>\r\n            <FormControl name=\"ID\" value={this.state.ID === null ? '' : this.state.ID} type=\"number\" placeholder=\"Enter the Id\"  onChange={this.handleChange} />\r\n            <br></br>\r\n            <Button variant=\"primary\" type=\"submit\" >\r\n                Send\r\n            </Button>\r\n          </Form>\r\n        <br></br><br></br>\r\n        <p>Address : {this.state.address}</p>\r\n        <p>Id : {this.state.id_disp}</p>\r\n        <br></br>\r\n        <img src={this.state.url} height='300' width='300' alt=''></img>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Token;","import React, { Component } from 'react'\r\nimport Web3 from 'web3'\r\nimport erc721_abi from './ERC721.json'\r\nimport addresse from './adresse_contract.json'\r\nimport { Button, Form, FormLabel, FormControl } from 'react-bootstrap';\r\n\r\n\r\nclass Token extends Component {  \r\n\r\n  constructor(props) {\r\n    super(props)\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n    this.state = { \r\n        address :'',\r\n        count :'',\r\n        value: '',\r\n    }\r\n  }\r\n  handleChange(e) {\r\n    this.setState({ [e.target.name]: e.target.value })\r\n  }\r\n\r\n  handleSubmit(e) {\r\n    e.preventDefault();\r\n    this.loadBlockchainData()\r\n    this.setState({ value: null })\r\n  }\r\n\r\n  async loadBlockchainData() {\r\n    this.setState({ address: this.state.value })\r\n    const web3 = new Web3(Web3.givenProvider || \"http://localhost:7545\")\r\n    Web3.givenProvider.enable()\r\n    var myContract = new web3.eth.Contract(erc721_abi.abi, addresse.ERC721)\r\n    const nombre = await myContract.methods.balanceOf(`${this.state.value}`).call()\r\n    this.setState({ count: nombre })         \r\n  }\r\n  \r\n\r\n  render() {\r\n    return (\r\n      <div className=\"container\">\r\n          <h1 style={{textAlign:\"center\"}}>Number Of Token Per User</h1>\r\n          <br></br>\r\n          <Form onSubmit={this.handleSubmit}>\r\n            <FormLabel >The choosen address :</FormLabel>\r\n            <FormControl id=\"address\" name=\"value\" value={this.state.value === null ? '' : this.state.value} type=\"text\" placeholder=\"Enter the address\"  onChange={this.handleChange} />\r\n            <br></br>\r\n            <Button variant=\"primary\" type=\"submit\" >\r\n                Send\r\n            </Button>\r\n          </Form>\r\n          <br></br><br></br>\r\n          <p>Address : {this.state.address}</p>\r\n          <p>Number of token : {this.state.count}</p>\r\n          \r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Token;","import React, { Component } from 'react'\r\nimport Web3 from 'web3'\r\nimport erc721_abi from './ERC721.json'\r\nimport addresse from './adresse_contract.json'\r\nimport { Button, Form, FormLabel, FormControl } from 'react-bootstrap';\r\n\r\n\r\nclass Creation extends Component {  \r\n\r\n  constructor(props) {\r\n    super(props)\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n    this.state = { \r\n        values :'',\r\n        url :'',\r\n        id : '',\r\n        url_link:''\r\n    }\r\n  }\r\n  handleChange(e) {\r\n    this.setState({ [e.target.name]: e.target.value })\r\n  }\r\n\r\n  handleSubmit(e) {\r\n    e.preventDefault();\r\n    this.loadBlockchainData()\r\n  }\r\n\r\n  async loadBlockchainData() {\r\n    const web3 = new Web3(Web3.givenProvider || \"http://localhost:7545\")\r\n    Web3.givenProvider.enable()\r\n    const accounts = await web3.eth.getAccounts()\r\n    var myContract = new web3.eth.Contract(erc721_abi.abi, addresse.ERC721);\r\n    // const nombre = await myContract.methods.mintToken('').send({from: \"0x9d9fFD857c0B1908C961D2FB7E5a4fc5871FFCE1\",  value : web3.utils.toWei(`${this.state.values}`,'ether') })\r\n    const nombre = await myContract.methods.mintToken(`${this.state.url}`).send({from : `${accounts[0]}`, value : web3.utils.toWei(`${this.state.values}`,'ether') });\r\n    this.setState({id: nombre.events.Transfer.returnValues.tokenId})    \r\n    this.setState({ values: '',url_link: this.state.url ,url :'' })\r\n  }\r\n  async getBack(){\r\n    const web3 = new Web3(Web3.givenProvider || \"http://localhost:7545\")\r\n    Web3.givenProvider.enable()\r\n    const accounts = await web3.eth.getAccounts()\r\n    var myContract = new web3.eth.Contract(erc721_abi.abi, addresse.ERC721)\r\n    const test= await myContract.methods.receiveEther().send({from : accounts[0]})\r\n    console.log('ici', test)\r\n  }\r\n  \r\n\r\n  render() {\r\n    return (\r\n      <div className=\"container\">\r\n          <h1 style={{textAlign:\"center\"}}>creation of a Token</h1>\r\n          <br></br>\r\n          <Form onSubmit={this.handleSubmit}>\r\n            <FormLabel >The value that you want to send (minimum 0.1 Ether) :</FormLabel>\r\n            <FormControl name=\"values\" value={this.state.values === null ? '' : this.state.values} type=\"number\" placeholder=\"Enter the value\"  onChange={this.handleChange} />\r\n            <br></br>\r\n            <FormLabel >The url to the chosen picture :</FormLabel>\r\n            <FormControl name=\"url\" value={this.state.url === null ? '' : this.state.url} type=\"url\" placeholder=\"Enter the url\"  onChange={this.handleChange} />\r\n            <br></br>\r\n            <br></br>\r\n            <Button variant=\"primary\" type=\"submit\" >\r\n                Send\r\n            </Button>\r\n            <br></br><br></br>\r\n            <p>Id of the created token : {this.state.id}</p>\r\n            <img src={this.state.url_link} height='300' width='300' alt=''></img>\r\n            <h3 style={{marginTop : '4em' }}>If you are the creator of the contract and you want to get your rewards, click here >> <Button onClick={this.getBack}>Give Back</Button> </h3>\r\n\r\n          </Form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Creation;","import React, { Component } from 'react'\r\nimport Web3 from 'web3'\r\nimport { Button, Form, FormLabel, FormControl } from 'react-bootstrap';\r\n\r\n\r\nclass Creation extends Component {  \r\n\r\n  constructor(props) {\r\n    super(props)\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n    this.state = { \r\n        abi :'',\r\n        address :'',\r\n        owner:'',\r\n        balance:'',\r\n        id:null,\r\n        owner_final:''\r\n    }\r\n  }\r\n  handleChange(e) {\r\n    this.setState({ [e.target.name]: e.target.value })\r\n  }\r\n\r\n  handleSubmit(e) {\r\n    e.preventDefault();\r\n    this.loadBlockchainData()\r\n  }\r\n\r\n  async loadBlockchainData() {\r\n    const web3 = new Web3(Web3.givenProvider || \"http://localhost:7545\")\r\n    Web3.givenProvider.enable()\r\n    var myContract = new web3.eth.Contract(JSON.parse(this.state.abi), `${this.state.address}`)\r\n    if (this.state.id !=null)\r\n    {\r\n        const owners = await myContract.methods.ownerOf(this.state.id).call()\r\n        this.setState({ owner_final: owners })  \r\n        const ba = await myContract.methods.balanceOf(`${owners}`).call()\r\n        this.setState({ balance: ba })\r\n    }\r\n    else{\r\n        const ba = await myContract.methods.balanceOf(`${this.state.owner}`).call()\r\n        this.setState({ balance: ba })\r\n        this.setState({ owner_final: this.state.owner })  \r\n    }\r\n    this.setState({\r\n        owner:null,\r\n        id:null,\r\n        abi:null,\r\n        address:null\r\n    })\r\n    \r\n  }\r\n  \r\n\r\n  render() {\r\n    return (\r\n      <div className=\"container\">\r\n          <h1 style={{textAlign:\"center\"}}>Import of a Token</h1>\r\n          <br></br>\r\n          <Form onSubmit={this.handleSubmit}>\r\n            <FormLabel >The address of the contract :</FormLabel>\r\n            <FormControl name=\"address\" value={this.state.address === null ? '' : this.state.address} type=\"text\" placeholder=\"Enter the address\"  onChange={this.handleChange} required/>\r\n            <br></br>\r\n            <FormLabel >The abi of the contract :</FormLabel>\r\n            <FormControl name=\"abi\" value={this.state.abi === null ? '' : this.state.abi} as=\"textarea\" placeholder=\"Enter the abi\" rows=\"6\" onChange={this.handleChange} required />\r\n            <br></br>\r\n            <FormLabel >The address of the one that you want to see the balance :</FormLabel>\r\n            <FormControl name=\"owner\" value={this.state.owner === null ? '' : this.state.owner} type=\"text\" placeholder=\"Enter the address\"  onChange={this.handleChange} />\r\n            <br></br>\r\n            <FormLabel >Or the id of the token that you want to see the owner :</FormLabel>\r\n            <FormControl name=\"id\" value={this.state.id === null ? '' : this.state.id} type=\"number\" placeholder=\"Enter the id\"  onChange={this.handleChange}  />\r\n            \r\n            <br></br>\r\n            <br></br>\r\n            <Button variant=\"primary\" type=\"submit\" >\r\n                Send\r\n            </Button>\r\n            <br></br><br></br>\r\n            <p>Balance of the account : {this.state.balance}</p>\r\n            <p>Owner of the token : {this.state.owner_final} </p>\r\n          </Form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Creation;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './Router';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.css';\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import React from \"react\";\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n  Link  \r\n} from \"react-router-dom\";\r\nimport Home from './App'\r\nimport Token from './Perso_token'\r\nimport {Button} from 'react-bootstrap'\r\nimport Compteur from './Counter_user'\r\nimport Creation from './Creation'\r\nimport Importer from './Importation'\r\n\r\n\r\nexport default function Test() {\r\n  return (\r\n    <Router>\r\n      <div>\r\n        <nav>\r\n          <ul style={{ listStyleType : \"none\"}}>            \r\n            <li style={{display: \"inline\"}}>\r\n                <Link to=\"/\"><Button > Home  </Button></Link>\r\n            </li>\r\n            <li style={{display: \"inline\", marginLeft:\"2em\"}}>\r\n                <Link to=\"/token\"><Button>Informations about a specific Token</Button></Link>\r\n            </li>\r\n            <li style={{display: \"inline\", marginLeft:\"2em\"}}>\r\n                <Link to=\"/count\"><Button>Tokens per User</Button></Link>\r\n            </li>\r\n            <li style={{display: \"inline\", marginLeft:\"2em\"}}>\r\n                <Link to=\"/creation\"><Button>Create a new Token</Button></Link>\r\n            </li>\r\n            <li style={{display: \"inline\", marginLeft:\"2em\"}}>\r\n                <Link to=\"/importer\"><Button>Import token of other groups</Button></Link>\r\n            </li>\r\n          </ul>\r\n        </nav>\r\n\r\n        {/* A <Switch> looks through its children <Route>s and\r\n            renders the first one that matches the current URL. */}\r\n        <Switch>\r\n          <Route exact path=\"/\">\r\n            <Home />\r\n          </Route>\r\n          <Route exact path=\"/token\">\r\n            <Token />\r\n          </Route>\r\n          <Route exact path=\"/count\">\r\n            <Compteur />\r\n          </Route>\r\n          <Route exact path=\"/creation\">\r\n            <Creation />\r\n          </Route>\r\n          <Route exact path=\"/importer\">\r\n            <Importer />\r\n          </Route>\r\n        </Switch>\r\n      </div>\r\n    </Router>\r\n  );\r\n}"],"sourceRoot":""}